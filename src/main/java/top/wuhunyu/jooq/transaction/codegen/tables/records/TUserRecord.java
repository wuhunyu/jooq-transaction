/*
 * This file is generated by jOOQ.
 */
package top.wuhunyu.jooq.transaction.codegen.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import top.wuhunyu.jooq.transaction.codegen.tables.TUser;
import top.wuhunyu.jooq.transaction.codegen.tables.interfaces.ITUser;


/**
 * 用户信息
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TUserRecord extends UpdatableRecordImpl<TUserRecord> implements Record2<Long, String>, ITUser {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>test.t_user.id</code>. 主键
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>test.t_user.id</code>. 主键
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>test.t_user.user_name</code>. 用户名称
     */
    @Override
    public void setUserName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>test.t_user.user_name</code>. 用户名称
     */
    @Override
    public String getUserName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TUser.T_USER.ID;
    }

    @Override
    public Field<String> field2() {
        return TUser.T_USER.USER_NAME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUserName();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUserName();
    }

    @Override
    public TUserRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TUserRecord value2(String value) {
        setUserName(value);
        return this;
    }

    @Override
    public TUserRecord values(Long value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ITUser from) {
        setId(from.getId());
        setUserName(from.getUserName());
    }

    @Override
    public <E extends ITUser> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TUserRecord
     */
    public TUserRecord() {
        super(TUser.T_USER);
    }

    /**
     * Create a detached, initialised TUserRecord
     */
    public TUserRecord(Long id, String userName) {
        super(TUser.T_USER);

        setId(id);
        setUserName(userName);
    }
}
